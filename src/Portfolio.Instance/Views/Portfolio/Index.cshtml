@using Portfolio.Instance;
@using Portfolio.Instance.ViewComponents;
@using Portfolio.Instance.Models;
@using Portfolio.Instance.Services.ContentService;
@using Portfolio.Models;

@model PortfolioIndexViewModel
@{
	ViewData["Title"] = "";
}

@inject IContentService contentService;

<section style="min-height: 80vh; padding-top: 32px;">
	<div class="container">

		@for (int i = 0; i < contentService.Categories.Count; i++)
		{
			var category = contentService.Categories[i];

			<h2 style="font-size: 2.0em; margin: 1.5em 0;">@category.DisplayName</h2>

			<div class="card-grid @(category.Projects.Count > 3 ? "card-grid-sm" : "")">

				@{
					int missing = 0;
				}
				@foreach (var project in category.Projects)
				{
					if (project.HideOnHomePage)
					{
						missing++;
					}
					else
					{
						@await Component.InvokeAsync("PortfolioItem", project)
					}
				}

				@if (missing > 0)
				{
					@await Component.InvokeAsync("ViewMoreItem", new ViewMoreViewModel()
					{
						Description = "More Projects",
						Quantity = missing
					})
				}

			</div>
		}

		<div class="card-grid card-grid-xs">
			@foreach (var discipline in contentService.Disciplines)
			{
				if (discipline.ShowOnHomePage)
				{
					@await Component.InvokeAsync("DisciplineCard", new DisciplineViewModel()
					{
						Discipline = discipline
					})
				}
			}
		</div>
	</div>
</section>
